from constants import *
import numpy as np

L1 = 1 << LIGHT_SHIFT
L2 = 2 << LIGHT_SHIFT
L3 = 3 << LIGHT_SHIFT
L4 = 4 << LIGHT_SHIFT

INTERSECTIONS = [(L1, L2), (L3, L4)]

roadType = np.array([
    [SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [RO,RO,RO,RO,RO,RO,RO,RO,RO,RO,RO,RO,SI,SI,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [RO,RO,RO,RO,RO,RO,RO,RO,RO,RO,RO,RO,SI,SI,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [SI,SI,SI,SI,SI,SI,SI,SI,RO,RO,RO,RO,SI,SI,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,SI,SI,RO,RO,RO,RO,SI,SI,SI,SI,SI,SI,SI,SI,SI,NO,NO,NO,NO],
    [SI,SI,SI,SI,SI,SI,SI,SI,RC|L2,RC|L2,RC|L2,RC|L2,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI,SI],
    [RO,RO,RO,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RO,RO,RO,RO,RO,SI,SI,SI],
    [RO,NO,NO,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RO,RO,RO,RO,RO,RC|L4,RO,RO],
    [RO,RO,RO,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RO,NO,RO,RO,RO,RC|L4,RO,RO],
    [RO,RO,RO,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RC|L1,RO,RO,RO,RO,RO,RO,RO,RO,RO,SI,SI,SI],
    [SI,SI,SI,SI,SI,SI,SI,SI,RC|L2,RC|L2,RC|L2,RC|L2,SI,SI,SI,SI,SI,SI,RC|L3,RC|L3,SI,SI,SI,SI,SI],
    [SI,SI,SI,SI,SI,SI,SI,SI,RO,RO,RO,RO,SI,SI,SI,SI,SI,SI,RO,RO,SI,SI,SI,SI,NO],
    [NO,NO,NO,NO,NO,NO,SI,SI,RO,RO,RO,RO,SI,SI,NO,NO,SI,SI,RO,RO,SI,SI,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,SI,SI,RO,RO,RO,RO,SI,SI,NO,NO,SI,SI,RO,RO,SI,SI,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,SI,SI,RO,RO,NO,RO,SI,SI,NO,NO,SI,SI,RO,RO,SI,SI,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,SI,SI,RO,RO,RO,RO,SI,SI,NO,NO,SI,SI,RO,RO,SI,SI,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,SI,SI,RO,RO,RO,RO,SI,SI,NO,NO,SI,SI,RO,RO,SI,SI,NO,NO,NO],
])

directions = np.array([
    [NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [WD,WD,WD,WD,WD,WD,WD,WD,WD,WD,WD,WD,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [ED,ED,ED,ED,ED,ED,ED,ED,SE,SD,ND,ND,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO,NO],
    [WD,WD,WD,WD,WD,WD,WD,WD,SW,SW,NW,NW,WD,WD,WD,WD,WD,WD,WD,WD,WD,WD,NO,NO,NO],
    [WD,WD,WD,WD,WD,WD,WD,WD,SW,SW,NW,NW,WD,WD,WD,WD,WD,WD,WD,WD,WD,NW,WD,WD,WD],
    [ED,ED,ED,ED,ED,ED,ED,ED,SE,SE,NE,NE,ED,ED,ED,ED,ED,ED,ED,ED,ED,ED,ED,ED,ED],
    [ED,ED,ED,ED,ED,ED,ED,ED,SE,SE,NE,NE,ED,ED,ED,ED,ED,ED,SE,ED,ED,ND,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
    [NO,NO,NO,NO,NO,NO,NO,NO,SD,SD,ND,ND,NO,NO,NO,NO,NO,NO,SD,ND,NO,NO,NO,NO,NO],
])
